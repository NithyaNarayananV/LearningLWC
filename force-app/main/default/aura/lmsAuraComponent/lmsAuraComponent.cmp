<aura:component implements="flexipage:availableForAllPageTypes" access="global">
    <!-- Think of this like a container that holds your component. 
         "implements" allows this component to be used on different pages. -->

    <!-- Defining attributes (variables) to store the message data -->
    <aura:attribute name="messageValue" type="String"/>  <!-- Holds the message typed by the user -->
    <aura:attribute name="messageRecieved" type="String"/>  <!-- Holds the message received from another source -->

    <!-- A special component that helps in communication between different parts of Salesforce (LMS - Lightning Message Service) -->
    <lightning:messageChannel
        type="SampleMessageChannel__c"  
        aura:id="SampleMessageChannel" 
        onMessage="{!c.handleMessage}"  
        scope="APPLICATION" 
    />
    <!--lightning:messageChannel
        type="SampleMessageChannel__c"  //Specifies the message channel to use 
        aura:id="SampleMessageChannel"  //Unique ID for this component 
        onMessage="{!c.handleMessage}" //Calls a function when a message is received
        scope="APPLICATION"  // Makes the message channel accessible everywhere in the application 
    -->

    <!-- A Card component: Provides a nice-looking box around your UI -->
    <lightning:card title="LMS Aura Component">
        
        <!-- First section: User enters a message -->
        <div class="slds-p-around_medium">
            <label>Enter publish message</label>
            <input type="text"
                id="messageInput"
                name="messageInput"
                class="slds-input"
                value="{!v.messageValue}"  
                onkeyup="{!c.inputHandler}"/>  
        </div>
        <!--div class="slds-p-around_medium">
            <label>Enter publish message</label>
            <input type="text"
                id="messageInput"
                name="messageInput"
                class="slds-input"
                value="{!v.messageValue}"  // Connects this field to the messageValue variable
                onkeyup="{!c.inputHandler}"/>  // Calls a function whenever the user types 
        </div-->

        <!-- Button to send (publish) the message -->
        <div class="slds-p-around_medium">
            <lightning:button onclick="{!c.publishMessage}">Publish</lightning:button>
        </div>

        <!-- Section to display the received message -->
        <div class="slds-p-around_medium">
            <h1><strong>Message Received</strong></h1>
            <lightning:formattedText value="{!v.messageRecieved}"/>  <!-- Displays the message received -->
        </div>
    </lightning:card>
</aura:component>
